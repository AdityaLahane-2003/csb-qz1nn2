{"version":3,"sources":["components/App.jsx","index.js"],"names":["App","useState","count","setCount","className","onClick","ReactDOM","render","document","getElementById"],"mappings":"uKAmCeA,MAjCf,WAiBE,MAA0BC,mBAAS,GAAE,mBAA9BC,EAAK,KAAEC,EAAQ,KAQtB,OACE,yBAAKC,UAAU,aACb,4BAAKF,GACL,4BAAQG,QANZ,WACEF,EAASD,EAAQ,MAKQ,KACvB,4BAAQG,QAVZ,WACEF,EAASD,EAAQ,MASQ,OC3B7BI,IAASC,OAAO,kBAAC,EAAG,MAAKC,SAASC,eAAe,U","file":"static/js/main.e8b0c92e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction App() {\n  // var counts=0;\n  // Instead of count we're goin' to create state\n  // const state = React.useState(); Like this or we can simply import it by adding in {} as non default and then use directly\n  // Like\n  // const state = useState(0);\n  // state stores the returm value of useState Function !\n  // console.log(state);\n  // State returns the array of two elements = [\n  //     Whatever the value we put in useState(Here),\n  //     f() -> This function updates the state of our first element of Array  !\n  //  ]\n\n  // Destructuring\n  // const rgb=[1,2,3] and use them like rgb[0]=1 Instead of this we can do as follows\n  // const [red,green,blue]=[1,2,3] and use red=1 Like this\n\n  const [count, setCount] = useState(0);\n\n  function add1() {\n    setCount(count + 10);\n  }\n  function add2() {\n    setCount(count - 10);\n  }\n  return (\n    <div className=\"container\">\n      <h1>{count}</h1>\n      <button onClick={add2}>-</button>\n      <button onClick={add1}>+</button>\n    </div>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}